{"version":3,"sources":["webpack://gatsby-portfolio/./src/pages/index.js"],"names":["shortcodes","Img","data","body","mdx","frontmatter","imgs","bodyImage","Safe","c","childImageSharp","publicURL","f","fluid","align","width","SafeFluid","src","className","MDXProvider","components","MDXRenderer"],"mappings":"kNAWMA,EAAa,CAChBC,SAoEH,UAjEkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAOD,EAAKE,IAAID,KAChBE,EAAcH,EAAKE,IAAIC,YAEvBC,EAAO,GACb,GAAID,EAAYE,UAAW,CACxB,OAA0CC,OAAKH,EAAYE,WAAlCE,EAAzB,EAAQC,gBAAoBC,EAA5B,EAA4BA,UACbC,GAAMJ,OAAKC,GAAlBI,MACRP,EAAI,OAAa,gBAAGQ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACjBH,GACG,QAAC,KAAD,CAAaE,MAAOA,EAAOC,MAAOA,EAAOF,OAAOG,QAAUJ,MAE1D,QAAC,KAAD,CAAWE,MAAOA,EAAOC,MAAOA,EAAOE,IAAKN,GAAa,MAI/D,OAEA,QAAC,IAAD,MACG,mBAASO,UAAU,UAChB,eAAKA,UAAU,iBACZ,eAAKA,UAAU,gBAYZ,eAAKA,UAAU,kBACZ,QAAC,IAAD,CAAKL,MAAOR,EAAYE,UAAUG,gBAAgBG,UAErD,QAAC,EAAAM,YAAD,CAAaC,WAAYpB,IACtB,QAAC,EAAAqB,YAAD,CAAaf,KAAMA,EAAMD,YAAaA,GAAcF","file":"component---src-pages-index-js-c81cbbd207dacd90b6b0.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n// import { Link } from 'gatsby'\n// import Masonry from 'react-masonry-component'\nimport Img from 'gatsby-image'\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Layout from \"../components/layout\"\nimport { MDXSharpImg, MDXSrcImg, SafeFluid } from '../components/images';\nimport { Safe } from '../components/utils';\n\nconst shortcodes = {\n   Img,\n}\n\nconst IndexPage = ({ data }) => {\n   const body = data.mdx.body\n   const frontmatter = data.mdx.frontmatter\n\n   const imgs = {}\n   if (frontmatter.bodyImage) {\n      const { childImageSharp: c, publicURL } = Safe(frontmatter.bodyImage);\n      const { fluid: f } = Safe(c);\n      imgs[`Image1`] = ({ align, width }) =>\n      f ? (\n         <MDXSharpImg align={align} width={width} fluid={SafeFluid(f)} />\n      ) : (\n         <MDXSrcImg align={align} width={width} src={publicURL || ''} />\n      );\n   }\n\n   return (\n//const IndexPage = ({ data }) => (\n   <Layout>\n      <article className=\"sheet\">\n         <div className=\"sheet__inner\">\n            <div className=\"sheet__body\">\n               {/* <div className=\"sheet__image-container\">\n                  <Img\n                  fluid={home.bodyImage.childImageSharp.fluid}\n                  style={{\n                     maxWidth: home.bodyImage.childImageSharp.presentationWidth,\n                     width: home.bodyImage.childImageSharp.presentationWidth,\n                     display: \"inline-block\",\n                  }}\n                  sizes={home.bodyImage.childImageSharp.sizes}\n                  />\n               </div> */}\n               <div className=\"sheet__banner\">\n                  <Img fluid={frontmatter.bodyImage.childImageSharp.fluid} />\n               </div>\n               <MDXProvider components={shortcodes}>\n                  <MDXRenderer imgs={imgs} frontmatter={frontmatter}>{body}</MDXRenderer>\n               </MDXProvider>\n            </div>\n         </div>\n      </article>\n      {/* <Masonry className=\"showcase\">\n      {data.allMdx.edges.map(({ node }) => (\n         <div key={node.id} className=\"showcase__item\">\n            <figure className=\"card\">\n               <Link to={`/${node.fields.slug}`} className=\"card__image\">\n               <Img fluid={node.fields.thumbnail.childImageSharp.fluid} />\n               </Link>\n               <figcaption className=\"card__caption\">\n                  <h6 className=\"card__title\">\n                     <Link to={`/${node.fields.slug}`}>{node.frontmatter.title}</Link>\n                  </h6>\n                  <div className=\"card__description\">\n                     <p>{node.frontmatter.summary}</p>\n                  </div>\n               </figcaption>\n            </figure>\n         </div>\n         ))}\n      </Masonry> */}\n   </Layout>\n   )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n   query {\n      mdx(fields: { name: { eq: \"home\" } }) {\n         frontmatter {\n            title\n            bodyImage {\n               childImageSharp {\n                  fluid(maxWidth: 600, maxHeight: 250, cropFocus: CENTER) {\n                     ...GatsbyImageSharpFluid\n                     presentationWidth\n                  }\n               }\n            }\n         }\n         body\n      }\n   }\n`\n\n// fluid(maxWidth: 600) {"],"sourceRoot":""}