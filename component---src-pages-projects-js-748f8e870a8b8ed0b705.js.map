{"version":3,"sources":["webpack://gatsby-portfolio/./src/pages/projects.js"],"names":["data","className","allMdx","edges","map","node","key","id","Link","to","fields","slug","fluid","thumbnail","childImageSharp","frontmatter","title","summary"],"mappings":"uMA8BA,UAxBqB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OAClB,QAAC,IAAD,MACG,QAAC,IAAD,CAASC,UAAU,YAClBD,EAAKE,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACpB,eAAKC,IAAKD,EAAKE,GAAIN,UAAU,mBAC1B,kBAAQA,UAAU,SACf,QAAC,EAAAO,KAAD,CAAMC,GAAE,IAAMJ,EAAKK,OAAOC,KAAQV,UAAU,gBAC5C,QAAC,IAAD,CAAKW,MAAOP,EAAKK,OAAOG,UAAUC,gBAAgBF,UAElD,sBAAYX,UAAU,kBACnB,cAAIA,UAAU,gBACX,QAAC,EAAAO,KAAD,CAAMC,GAAE,IAAMJ,EAAKK,OAAOC,MAASN,EAAKU,YAAYC,SAEvD,eAAKf,UAAU,sBACZ,iBAAII,EAAKU,YAAYE","file":"component---src-pages-projects-js-748f8e870a8b8ed0b705.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Masonry from 'react-masonry-component'\nimport Img from 'gatsby-image'\nimport Layout from \"../components/layout\"\n\nconst ProjectsPage = ({ data }) => (\n   <Layout>\n      <Masonry className=\"showcase\">\n      {data.allMdx.edges.map(({ node }) => (\n         <div key={node.id} className=\"showcase__item\">\n            <figure className=\"card\">\n               <Link to={`/${node.fields.slug}`} className=\"card__image\">\n               <Img fluid={node.fields.thumbnail.childImageSharp.fluid} />\n               </Link>\n               <figcaption className=\"card__caption\">\n                  <h6 className=\"card__title\">\n                     <Link to={`/${node.fields.slug}`}>{node.frontmatter.title}</Link>\n                  </h6>\n                  <div className=\"card__description\">\n                     <p>{node.frontmatter.summary}</p>\n                  </div>\n               </figcaption>\n            </figure>\n         </div>\n      ))}\n      </Masonry>\n   </Layout>\n)\n\nexport default ProjectsPage\n\nexport const query = graphql`\n   query {\n      allMdx(\n         filter: {frontmatter: {published: {eq: true}, type: {eq: \"project\"}}},\n         sort: { fields: [frontmatter___date], order: DESC }) {\n         totalCount\n         edges {\n            node {\n               id\n               frontmatter {\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                  summary\n               }\n               fields {\n                  name\n                  slug\n                  thumbnail {\n                     childImageSharp {\n                        fluid(maxWidth: 450) {\n                           ...GatsbyImageSharpFluid\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n`"],"sourceRoot":""}